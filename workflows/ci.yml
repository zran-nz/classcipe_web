name: Classcipe Web CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Use Node.js 15.2.1
        uses: actions/setup-node@v1
        with:
          node-version: 15.2.1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path:  |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ~/cache
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Push Images to GitHub Packages (develop)
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: zran-nz/nibiru/titan
          tags: develop
          tag_with_ref: true

      - name: Push Images to GitHub Packages (master)
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: zran-nz/nibiru/titan
          tags: master
          tag_with_ref: true

      - name: Deploy to test server
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        run: |
          mkdir -p ~/.ssh
          echo "$TEST_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no ubuntu@test.classcipe.com
          ssh  ubuntu@test.classcipe.com  'cd deployment && docker system prune --volumes -a -f && docker-compose pull && docker-compose up -d'
        env:
          TEST_SERVER_PRIVATE_KEY: ${{ secrets.TEST_SERVER_PRIVATE_KEY }}

      - name: Deploy to prod server
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          mkdir -p ~/.ssh
          echo "$PROD_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no ubuntu@www.classcipe.com
          ssh ubuntu@www.classcipe.com  'cd deployment/k8s/ && docker system prune --volumes -a -f && chmod +x ./k8s-refresh.sh && ./k8s-refresh.sh'
        env:
          PROD_SERVER_PRIVATE_KEY: ${{ secrets.PROD_SERVER_PRIVATE_KEY }}

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}